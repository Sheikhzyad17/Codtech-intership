/*To develop a password strength checker, we'll implement an algorithm that assesses the strength of passwords based on various criteria*/


import re

def password_strength(password):
    # Define strength levels
    strength_levels = ["Very Weak", "Weak", "Moderate", "Strong", "Very Strong"]
    
    # Initialize score
    score = 0
    
    # Length criteria
    length = len(password)
    if length >= 8:
        score += 1
    if length >= 12:
        score += 1

    # Complexity criteria
    if re.search(r'[A-Z]', password):
        score += 1
    if re.search(r'[a-z]', password):
        score += 1
    if re.search(r'[0-9]', password):
        score += 1
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 1

    # Dictionary word check (simplified version using a common passwords list)
    common_passwords = ["password", "123456", "123456789", "12345678", "12345", "1234567", "qwerty", "abc123"]
    if password.lower() in common_passwords:
        score = 0

    # Return the corresponding strength level
    return strength_levels[score]

# Example usage
password = "P@ssw0rd123!"
strength = password_strength(password)
print(f"Password strength: {strength}")
